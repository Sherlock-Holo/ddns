on: [ push, pull_request ]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        name: install toolchain
        with:
          profile: default
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        name: cargo check
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        name: install toolchain
        with:
          profile: default
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        name: cargo fmt
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        name: install toolchain
        with:
          profile: default
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        name: cargo clippy
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        name: install toolchain
        with:
          profile: default
          toolchain: nightly
          override: true

      - name: test
        uses: actions-rs/cargo@v1
        env:
          TEST_ZONE: ${{ secrets.TEST_ZONE }}
          CF_DNS_TOKEN: ${{ secrets.CF_DNS_TOKEN }}
        with:
          command: test
          args: -- --nocapture

  build:
    name: build
    runs-on: ubuntu-latest
    container: clux/muslrust:stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Link to predefined musl toolchain
        run: |
          ln -s /root/.cargo $HOME/.cargo
          ln -s /root/.rustup $HOME/.rustup

      - name: Build release binary
        run: cargo build --release

      - uses: actions/upload-artifact@v1
        with:
          name: ddns
          path: target/x86_64-unknown-linux-musl/release/ddns

  build-docker-image:
    name: build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: sherlockholo/ddns:latest
